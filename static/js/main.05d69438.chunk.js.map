{"version":3,"sources":["logo.png","PrikazDan.js","VrijemePrikaz.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","PrikazDan","dan","prikaz","forEach","obj","index","push","key","className","sat","alt","src","simbol","t2_m","vjetar","datum","dtj","VrijemePrikaz","podaci","vrijemeDani","prethodniDatum","datumBrojac","getElementsByTagName","item","getAttribute","oborina","dani","element","options","customStyles","input","provided","state","color","menuList","backgroundColor","option","isSelected","control","border","placeholder","singleValue","indicatorsContainer","App","props","handleSelect","bind","promijeniDan","gradPostoji","odabranGrad","error","dana7","cookies","get","value","this","setState","set","path","ucitajPodatke","logo","replace","styles","onChange","name","type","checked","htmlFor","height","width","url","fetch","then","response","ok","Error","text","str","window","DOMParser","parseFromString","data","label","catch","Component","withCookies","Boolean","location","hostname","match","ReactDOM","render","StrictMode","CookiesProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.05d69438.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.2411d418.png\";","import React from 'react';\n\nfunction PrikazDan ({dan}) {\n    let prikaz = [];\n    dan.forEach((obj,index) => {\n        prikaz.push(\n        <div key={index} className=\"rounded text-center p-3 my-1 my-md-0 mx-1 bg-dark d-flex flex-row flex-md-column justify-content-center align-items-center\">\n            <h5 className=\"text-white text-center px-1\">{obj.sat}h</h5>\n            <img className=\"ikona text-center px-1 pb-1\" alt=\"vrijeme\" src={\"https://meteo.hr/assets/images/icons/\"+obj.simbol+\".svg\"} />\n            <h5 className=\" text-white text-center px-1\">{obj.t2_m} Â°C</h5>\n            <img className=\"ikona text-center px-1\" alt=\"vjetar\" src={\"https://meteo.hr/assets/images/icons/\"+obj.vjetar+\".svg\"} />\n        </div>)\n    });\n    return (\n        <div className=\"bg-secondary m-2 py-2 rounded \">\n            <div className=\"text-center text-white px-2\">\n\t\t        <h5>{dan[0].datum} - {dan[0].dtj}</h5>\n\t        </div>\n            <div className=\"d-flex flex-column flex-md-row justify-content-center\">\n                    {prikaz}\n            </div>\n        </div>\n        \n    )\n}\n\nexport default PrikazDan;\n\n","import React from 'react';\nimport PrikazDan from './PrikazDan'\n\nfunction VrijemePrikaz ({podaci}) {\n\n  let vrijemeDani= [[]];\n  let prethodniDatum =\"\";\n  let datumBrojac=0;\n\nfor (let item of podaci.getElementsByTagName(\"dan\")) {\n      let obj = {\n        datum: item.getAttribute(\"datum\"),\n        dtj: item.getAttribute(\"dtj\"),\n        sat: item.getAttribute(\"sat\"),\n        t2_m: item.getElementsByTagName(\"t_2m\")[0][\"innerHTML\"],\n        simbol: item.getElementsByTagName(\"simbol\")[0][\"innerHTML\"],\n        vjetar: item.getElementsByTagName(\"vjetar\")[0][\"innerHTML\"],\n        oborina: item.getElementsByTagName(\"oborina\")[0][\"innerHTML\"]\n      };\n\n      if(prethodniDatum === \"\" || prethodniDatum === item.getAttribute(\"datum\")) {\n        vrijemeDani[datumBrojac].push(obj)\n\n      } else {\n        datumBrojac ++;\n        vrijemeDani.push([])\n        vrijemeDani[datumBrojac].push(obj)\n      }\n      prethodniDatum = item.getAttribute(\"datum\");\n\n    }\n    let dani = [];\n    vrijemeDani.forEach((element,index) => {\n          \n      dani.push(<PrikazDan key = {index} dan={element}/>)\n      })\n      \n      return <div className=\"d-md-flex flex-wrap justify-content-center\">{dani}</div>\n}\n  \n\nexport default VrijemePrikaz;\n","import React, {Component} from 'react';\nimport Select from 'react-select'\nimport Loader from 'react-loader-spinner'\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport VrijemePrikaz from './VrijemePrikaz'\nimport { withCookies} from 'react-cookie';\nimport './App.css';\nimport logo from './logo.png';\n\nlet options = [];\n\nconst customStyles = {\n  input: (provided, state) => ({\n    ...provided,\n    color: 'white',\n  }),\n  menuList: (provided, state) => ({\n    ...provided,\n    color: 'white',\n    backgroundColor:'#343a40',\n  }),\n  option: (provided, state) => ({\n    ...provided,\n    color: 'white',\n    backgroundColor: state.isSelected ? '#6c757d' : '#343a40',\n\n  }),\n  control: (provided, state) => ({\n    ...provided,\n    backgroundColor: \"#343a40\",\n    border:'transparent',\n\n  }),\n  placeholder: (provided, state) => ({\n    ...provided,\n    color: \"white\",\n    \n  }),\n  singleValue: (provided, state) => ({\n    ...provided,\n    color: \"white\",\n  }),\n  indicatorsContainer: (provided, state) => ({\n    ...provided,\n    color: \"white\"\n  })\n}\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {gradPostoji:true,podaci: \"\",odabranGrad: \"\",error:false, dana7: (this.props.cookies.get('dana7')===true) || false};\n  }\n  \n  handleSelect (value) {\n    for (let item of this.state.podaci) {\n       if(item.getAttribute(\"ime\") === (value.value)) {\n            this.setState({odabranGrad:item,gradPostoji:true});\n            this.props.cookies.set('odabranGrad', value.value, { path: '/' });\n          }\n    }\n  };\n  promijeniDan() {\n    this.setState({podaci: \"\",odabranGrad: \"\",error:false,dana7: !this.state.dana7},()=>{\n      this.ucitajPodatke();\n      this.props.cookies.set('dana7', this.state.dana7, { path: '/' });\n    })\n  };\n  handleSelect = this.handleSelect.bind(this);\n  promijeniDan = this.promijeniDan.bind(this);\n\n\n\n  render() {\n   \n    return (\n\n      <div className=\"stranica d-flex flex-column\">\n            <div className=\"d-flex flex-column content bg-dark\">\n                <nav className=\"navbar navbar-dark bg-secondary p-3 d-flex justify-content-center\">\n                  <div className=\"text-center\">\n                     <p className=\"text-white\">reactVrijeme</p>\n                     <img className=\"ikona\" alt=\"reactVrijeme\" src={logo} />\n                  </div>\n                   \n                </nav>\n                {\n                  this.state.podaci ? (\n                <div className=\"py-3 bg-secondary\">\n                  <div className=\"container text-white d-flex flex-column\">\n                    <h1 className=\"display-4 text-center\">{this.state.odabranGrad !== \"\" ? this.state.odabranGrad.getAttribute(\"ime\").replace(/_/g, \" \") : \"Lokacija nije odabrana\"}</h1>\n                    <p className=\"lead text-center\">Ovdje pretraÅ¾ujte vrijeme</p>\n                    <Select styles={customStyles} className='col-md-4 p-0 align-self-center' options={options} onChange={this.handleSelect} placeholder=\"Odaberite lokaciju\"/> \n                    <form className=\"text-center pt-2\">\n                          <input name=\"dana7\" type=\"checkbox\" className=\"form-check-input\" checked={this.state.dana7} onChange={this.promijeniDan} />\n                          <label className=\"form-check-label\" htmlFor=\"dana7\">7 dana </label>\n                    </form>\n                  </div>\n                </div>)\n                : this.state.error ? (\n\n                  <div className=\"text-center my-auto\">\n                  <h3 className=\"text-white pt-4\">GreÅ¡ka prilikom dohvaÄanja podataka</h3>\n                </div>\n\n                ) : (\n\n                <div className=\"text-center pt-4 my-auto\">\n                  <Loader type=\"Oval\" color=\"white\" height={100} width={100}/>\n                  <h3 className=\"text-white pt-4\">DohvaÄanje podataka...</h3>\n                </div>)\n                }\n                {\n                  !this.state.gradPostoji?  <div className=\"text-center pt-4 my-auto\">\n                  <h3 className=\"text-white pt-4\">Nema podataka za izabrani grad</h3>\n                </div> : null\n                }\n                { \n                  this.state.odabranGrad === \"\" && !this.state.error ? null\n                          :\n                          !this.state.error ?\n                <div className=\"\">\n                  <VrijemePrikaz podaci={this.state.odabranGrad}/>\n                </div>\n                : null\n                }\n          \n          </div>\n          <footer className=\"footer bg-secondary p-3\">\n              <div className=\"text-center\">\n                <span className=\"text-light\">reactVrijeme</span>\n              </div>\n          </footer>\n    </div>\n  ) }\n  ucitajPodatke() {\n    options=[];\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    let url =\"\";\n    this.state.dana7 ? url = \"https://prognoza.hr/sedam/hrvatska/7d_meteogrami.xml\" :\n    url = \"https://prognoza.hr/tri/3d_graf_i_simboli.xml\";\n    \n    fetch(proxyurl + url)\n      .then(response => {\n        if(!response.ok) {\n          throw new Error('Ups!');\n          \n        }\n        return response.text()\n      })\n       .then(str => (new window.DOMParser()).parseFromString(str, \"text/xml\"))\n        .then(data => {\n          const podaci = data.getElementsByTagName(\"grad\");\n          for (let item of podaci) {\n            options.push({value: item.getAttribute(\"ime\"), label: item.getAttribute(\"ime\").replace(/_/g, \" \")});\n           }\n           \n          this.setState({podaci: podaci})\n\n          if(this.props.cookies.get('odabranGrad')) {\n            this.handleSelect({value: this.props.cookies.get('odabranGrad')})\n          }\n          if(this.state.odabranGrad===\"\") {\n            this.setState({gradPostoji:false});\n          }\n         })\n        .catch(() => this.setState({error: true}))\n  }\n  componentDidMount() {\n   this.ucitajPodatke();\n  }\n}\n\nexport default withCookies(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { CookiesProvider } from 'react-cookie';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CookiesProvider>\n      <App />\n    </CookiesProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}